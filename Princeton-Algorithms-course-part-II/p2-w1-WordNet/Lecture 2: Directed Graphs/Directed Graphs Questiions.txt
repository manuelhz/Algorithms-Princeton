1) How many different digraphs are there on V vertices? Allow self-loops but do not allow parallel edges.

a) V
b) 2^V
c) 2^(V^2)
There are V^2 possible edges. Each edge is either in the digraph or not.
d) 2^(2^V)

2) Suppose that a digraph G is represented using the adjacency-lists representation. What is the order of growth of the running time to find all vertices that point to a given vertex v?

a)indegree(v)
b)outdegree(v)
c)V
->d)V + E
Correct
You must scan through each of the V adjacency lists and each of the E edges. If this were a common operation in digraph-processing problems, you could associate two adjacency lists with each vertex—one containing all of the vertices pointing from v (as usual) and one containing all of the vertices pointing to v.

3) Suppose that during an execution of depth-first search in a digraph G, dfs(v) is called after dfs(w) is called but before dfs(w) returns. Which of the following must be true of graph G?


a) There exists a directed path from v to w.
->b) There exists a directed path from w to v.
Correct
The function call stack between when ww and vv are called contains a directed path from ww to vv.
c)There does not exist a directed path from v to w.
d) There exists a directed cycle containing both v and w.

4) Consider an execution of depth-first search on a directed acyclic graph G which contains the edge v→w. Which one of the following is impossible at the time dfs(v) is called?

a) dfs(w) has not yet been called.
b) dfs(w) will be the next recursive call after dfs(v).
->c) dfs(w) has already been called but not yet returned.
Correct
If dfs(v) is called before dfs(w) returns, then the function-call stack contains a directed path from w to v (as in the previous in-video quiz). Combining this path with the edge v→w yields a directed cycle, which is impossible since G is acyclic.
d) dfs(w) has already been called and returned.

5) How many strong components does a DAG on V vertices and E edges have?


a) 0
Incorrect
A digraph always has between 1 and V strong components.
b) 1
c) V
Correct
In a DAG, no two vertices v and w can be in the same strong component—if there were, there would be both a directed path from v to w and one from w to v, which implies that the digraph has a directed cycle. Thus, each vertex is its own strong component.
d) E

6) The Kosaraju–Sharir algorithm runs DFS in G^R followed by DFS in G. Which of the following modifications will not find the strong components?
->a) Run BFS in G^R followed by DFS in G.
Correct
The DFS in the first phase (to compute the reverse postorder) is crucial; in the second phase, any algorithm that marks the set of vertices reachable from a given vertex will do.
b) Running DFS in G followed by DFS in G^R computes the strong components in G^R, which are the same as those in G.
b) Run DFS in G^R followed by BFS in G.
c) Run DFS in G followed by BFS in G^R.
Incorrect
This computes the strong components in G^R, which are the same as the strong components in G.
The DFS in the first phase of Kosaraju–Sharir (to compute the reverse postorder) is crucial; in the second phase, any algorithm (such as DFS or BFS) that marks the set of vertices reachable from a given vertex will do.
d) Run DFS in G followed by DFS in G^R.
Incorrect
This computes the strong components in G^R, which are the same as the strong components in G.
